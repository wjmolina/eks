name: deployment
on:
  push:
    branches:
      - main
jobs:
  docker:
    name: docker
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      # - name: login action
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      # - name: setup buildx action
      #   uses: docker/setup-buildx-action@v1
      # - name: build push action
      #   uses: docker/build-push-action@v2
      #   with:
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/simplewhale:latest
  terraform:
    name: terraform
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: terraform setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: execute commands
        run: |
          terraform -chdir=terraform init
          terraform -chdir=terraform apply -auto-approve
  kubernetes:
    name: kubernetes
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: kubectl setup
        uses: tale/kubectl-action@v1
      - name: execute commands
        run: |
          aws eks --region us-west-1 update-kubeconfig --name $(terraform -chdir=terraform output aws_eks_cluster_eks_name | tr -d '"')
          kubectl create namespace example-app --dry-run=client -o yaml | kubectl apply -f -
          kubectl apply -R -f kubernetes
