name: cicd

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: checkout
        uses: actions/checkout@v3

      - name: setup terraform
        uses: hashicorp/setup-terraform@v2

      - name: terraform init
        run: terraform init

      - name: terraform apply
        run: terraform apply -auto-approve

  kubernetes:
    needs: terraform
    name: kubernetes
    runs-on: ubuntu-latest
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: kubectl action
        uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}

      - name: pwd
        if: always()
        run: pwd

      - name: ls -la
        if: always()
        run: ls -la

      - name: create namespace
        if: always()
        run: kubectl create ns example-app

      - name: apply secret
        if: always()
        run: kubectl apply -n example-app -f secrets/secret.yml

      - name: apply configmap
        if: always()
        run: kubectl apply -n example-app -f configmaps/configmap.yml

      - name: apply deployment
        if: always()
        run: kubectl apply -n example-app -f deployments/deployment.yml

      - name: apply service
        if: always()
        run: kubectl apply -n example-app -f services/service.yml
